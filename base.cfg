[buildout]
show-picked-versions = true
extensions =
    mr.developer

index = https://pypi.python.org/simple/

parts =
    instance
    test
    code-analysis
    releaser
    i18ndude
    omelette
    plone-helper-scripts
    zpretty
    zpretty-run
    createcoverage
    coverage
    test-coverage

develop = .
sources-dir = extras
auto-checkout = *
always-checkout = force

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    design.plone.contenttypes [test]

zcml-additional =
  <configure xmlns="http://namespaces.zope.org/zope"
             xmlns:plone="http://namespaces.plone.org/plone">
  <plone:CORSPolicy
    allow_origin="http://localhost:3000,http://127.0.0.1:3000"
    allow_methods="DELETE,GET,OPTIONS,PATCH,POST,PUT"
    allow_credentials="true"
    expose_headers="Content-Length,X-My-Header"
    allow_headers="Accept,Authorization,Content-Type,X-Custom-Header,Origin"
    max_age="3600"
    />
  </configure>

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-exclude=bootstrap.py,bootstrap-buildout.py,docs,bin,*.egg,setup.py,overrides,omelette
flake8-max-complexity = 25
flake8-ignore = E203, E266, E501, W503, E999
flake8-max-line-length = 200
# flake8-select = B,C,E,F,W,T4,B9
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-print
#    flake8-isort
# additional pep8/flake8 rules, see docs for details
# https://pep8.readthedocs.io/en/1.4.6/intro.html#error-codes
# - E123: closing bracket does not match indentation of opening bracketâ€™s line
# flake8-select = E123

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'design.plone.contenttypes', '--auto-color', '--auto-progress']


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[zpretty]
recipe = zc.recipe.egg
eggs =
   zpretty

[zpretty-run]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find src -name '*.zcml' | xargs bin/zpretty -i
output = ${buildout:directory}/bin/zpretty-run
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=75
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
    ${buildout:directory}/bin/coverage json -i
output = ${buildout:directory}/bin/test-coverage
mode = 755

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[versions]
# Don't use a released version of design.plone.contenttypes
design.plone.contenttypes =

[sources]
#collective.volto.blocksfield = git https://github.com/collective/collective.volto.blocksfield.git pushurl=git@github.com:collective/collective.volto.blocksfield.git branch=main
#redturtle.volto = git https://github.com/RedTurtle/redturtle.volto.git pushurl=git@github.com:RedTurtle/redturtle.volto.git
#redturtle.bandi = git https://github.com/RedTurtle/redturtle.bandi.git pushurl=git@github.com:RedTurtle/redturtle.bandi.git
#plone.restapi = git https://github.com/plone/plone.restapi.git

# use for integration development btw design.plone.contenttypes and redturtle.prenotazioni
redturtle.prenotazioni = git https://github.com/RedTurtle/redturtle.prenotazioni.git
# collective.contentrules.mailfromfield = git https://github.com/RedTurtle/collective.contentrules.mailfromfield.git
